module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'no-restricted-syntax': [
      'error',
      {
        'selector': 'BinaryExpression[operator=/(==|===|!=|!==)/][left.raw=/^(true)$/], BinaryExpression[operator=/(==|===|!=|!==)/][right.raw=/^(true)$/]',
        'message': 'Comparing to `true` is redondant'
      }
    ],
    'eqeqeq': ['error', 'smart'],
    'no-mixed-operators': 'error',
    'yoda': 'error',
    'filenames/match-exported': 2,
    'no-restricted-globals': 'error',
    'no-return-await': 'error',
    'import/no-unresolved': [2, { commonjs: true, amd: true }],
    'import/namespace': 'error',
    'import/default': 'error',
    'import/export': 'error',
    'import/order': 'error',
    'no-extra-parens': ['error', 'all', { 'nestedBinaryExpressions': false }],
    'space-infix-ops': 'error',
    'keyword-spacing': 'error',
    'comma-spacing': 'error',
    'arrow-spacing': 'error',
    'object-shorthand': ['error', 'always'],
    'newline-before-return': 'error',
    'no-multiple-empty-lines': ['error', { 'max': 1, 'maxEOF': 0, 'maxBOF': 0 }],
    'space-in-parens': ['error', 'never'],
    'indent': ['error', 2, { 'SwitchCase': 1, 'ignoredNodes': ['JSXElement', 'TemplateLiteral'] }],
    'no-multi-spaces': 'error',
    'no-trailing-spaces': 'error',
    'brace-style': ['error'],
    'quotes': ['error', 'single'],
    'key-spacing': [2, { beforeColon: false, afterColon: true }],
    'object-curly-spacing': ['error', 'always', { 'objectsInObjects': false }],
    'semi': ['error', 'never'],
    'comma-dangle': ['error', 'never'],
    'array-bracket-spacing': ['error', 'never'],
    'no-unused-vars': 'off',
  },
};
